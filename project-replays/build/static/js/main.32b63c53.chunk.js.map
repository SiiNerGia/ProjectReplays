{"version":3,"sources":["components/navbar.component.js","components/replays-list.component.js","components/create-replay.component.js","components/search-replay.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Replay","props","exercise","game","player1","character1","player2","character2","winner","href","link","target","rel","ReplaysList","state","replays","axios","get","then","response","setState","data","catch","error","console","log","this","map","currentreplay","deleteReplay","key","_id","replayList","streetFighterCharacters","tekken7Characters","players","CreateReplays","onChangeGame","bind","onChangeLink","onChangePlayer1","onChangePlayer2","onChangeCharacter1","onChangeCharacter2","onChangeWinner","onSubmit","games","characters1","characters2","e","value","preventDefault","winnerField","replay","JSON","stringify","post","res","window","location","ref","required","onChange","type","pattern","SearchReplays","replaysQuery","params","App","path","exact","component","CreateReplay","SearchReplay","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.32b63c53.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n        <Link to=\"/\" className=\"navbar-brand\">Project Replays</Link>\r\n        <div className=\"collpase navbar-collapse\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"navbar-item\">\r\n          <Link to=\"/\" className=\"nav-link\">Replays</Link>\r\n          </li>\r\n          <li className=\"navbar-item\">\r\n          <Link to=\"/create\" className=\"nav-link\">Create new replay</Link>\r\n          </li>\r\n          <li className=\"navbar-item\">\r\n          <Link to=\"/search\" className=\"nav-link\">Search replay</Link>\r\n          </li>\r\n        </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n"," import React, { Component} from 'react';\r\n //import { Link } from 'react-router-dom';\r\n import axios from 'axios';\r\n\r\n const Replay = props => (\r\n    <tr>\r\n        <td>{props.exercise.game}</td>\r\n        <td>{props.exercise.player1}</td>\r\n        <td>{props.exercise.character1}</td>\r\n        <td>{props.exercise.player2}</td>\r\n        <td>{props.exercise.character2}</td>\r\n        <td>{props.exercise.winner}</td>\r\n        <td>\r\n            <a href={props.exercise.link} target=\"_blank\" rel=\"noopener noreferrer\">Link</a>\r\n        </td>\r\n    </tr>\r\n  )\r\n\r\n export default class ReplaysList extends Component {\r\n     constructor(props){\r\n         super(props);\r\n\r\n         this.state = {\r\n             replays: []\r\n            };\r\n     }\r\n\r\n     componentDidMount(){\r\n         axios.get('http://localhost:5000/replays/').then(response => {\r\n             this.setState({\r\n                 replays: response.data\r\n             })\r\n         }).catch((error) => {\r\n             console.log(error);\r\n         })\r\n     }\r\n\r\n     replayList() {\r\n        return this.state.replays.map(currentreplay => {\r\n          return <Replay exercise={currentreplay} deleteReplay={this.deleteReplay} key={currentreplay._id}/>;\r\n        })\r\n      }\r\n\r\n     render(){\r\n         return(\r\n            <div>\r\n                <h3>Logged Replays</h3>\r\n                    <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                    <th>Game</th>\r\n                    <th>Player 1</th>\r\n                    <th>Character 1</th>\r\n                    <th>Player 2</th>\r\n                    <th>Character 2</th>\r\n                    <th>Winner</th>\r\n                    <th>Link</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { this.replayList() }\r\n                </tbody>\r\n                </table> \r\n            </div>\r\n         )\r\n     }\r\n }","import React, { Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst streetFighterCharacters =['Ryu','Ken','Birdie','Cammy','Chun-Li','Dhalsim','F.A.N.G','Karin','Laura','M.Bison/Dictator','Nash','Necalli','R.Mika','Rashid','Vega/Claw','Zangief','Alex','Balrog/Boxer','Guile',\r\n    'Ibuki','Juri','Urien','Abigail','Akuma/Gouki','Ed','Kolin','Menat','Zeku','Blanka','Cody','Falke','G','Sagat','Sakura','E.Honda','Gill','Kage','Lucia','Poison','Seth'];\r\n\r\nconst tekken7Characters = ['Heihachi','Kazuya','Lee','Law','Nina','Paul','Yoshimitsu','Bryan','Eddy','Hwoarang','Jin','King','Kuma','Xiaoyu','Panda','Steve','Asuka','Devil Jin','Feng',\r\n'Lili','Dragunov','Bob','Leo','Miguel','Lars','Alisa','Claudio','Katarina','Lucky Chloe','Shaheen','Josie','Gigas','Jack-7','Kazumi','Master Raven','Eliza','Anna','Lei','Julia',\r\n'Marduk','Armor King','Zafina','Ganryu','Leroy','Fahkumram','Akuma','Geese','Noctis','Negan']\r\n\r\nconst players = ['Player 1', 'Player 2']\r\n\r\nexport default class CreateReplays extends Component {\r\n\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeGame = this.onChangeGame.bind(this);\r\n        this.onChangeLink = this.onChangeLink.bind(this);\r\n        this.onChangePlayer1 = this.onChangePlayer1.bind(this);\r\n        this.onChangePlayer2 = this.onChangePlayer2.bind(this);\r\n        this.onChangeCharacter1 = this.onChangeCharacter1.bind(this);\r\n        this.onChangeCharacter2 = this.onChangeCharacter2.bind(this);\r\n        this.onChangeWinner = this.onChangeWinner.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            games: [],\r\n            game:'',\r\n            link: '',\r\n            player1: '',\r\n            player2: '',\r\n            characters1: [],\r\n            characters2: [],\r\n            character1:'',\r\n            character2:'',\r\n            winner: '',\r\n        }\r\n    }\r\n\r\n \r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            games: ['Select a game', 'Street Fighter V','Tekken 7'],\r\n            characters1: ['Ryu','Ken','Birdie','Cammy','Chun-Li','Dhalsim','F.A.N.G','Karin','Laura','M.Bison/Dictator','Nash','Necalli','R.Mika','Rashid','Vega/Claw','Zangief','Alex','Balrog/Boxer','Guile',\r\n            'Ibuki','Juri','Urien','Abigail','Akuma/Gouki','Ed','Kolin','Menat','Zeku','Blanka','Cody','Falke','G','Sagat','Sakura','E.Honda','Gill','Kage','Lucia','Poison','Seth'],\r\n            characters2: ['Ken','Ryu','Birdie','Cammy','Chun-Li','Dhalsim','F.A.N.G','Karin','Laura','M.Bison/Dictator','Nash','Necalli','R.Mika','Rashid','Vega/Claw','Zangief','Alex','Balrog/Boxer','Guile',\r\n                'Ibuki','Juri','Urien','Abigail','Akuma/Gouki','Ed','Kolin','Menat','Zeku','Blanka','Cody','Falke','G','Sagat','Sakura','E.Honda','Gill','Kage','Lucia','Poison','Seth'],\r\n            game:'Select a game',\r\n            character1: 'Ryu',\r\n            character2:'Ken',\r\n            winner: 'Player 1'\r\n        })\r\n    }\r\n\r\n    onChangeGame(e){\r\n        if(e.target.value === 'Street Fighter V'){\r\n            this.setState({\r\n                characters1: streetFighterCharacters,\r\n                characters2: streetFighterCharacters,\r\n            })\r\n            \r\n        }\r\n        if(e.target.value === 'Tekken 7'){\r\n            this.setState({\r\n                characters1: tekken7Characters,\r\n                characters2: tekken7Characters,\r\n                character1: 'Heihachi',\r\n                character2: 'Heihachi'\r\n            })\r\n        }\r\n        this.setState({\r\n            game: e.target.value\r\n        })\r\n       \r\n    }\r\n    onChangeLink(e){\r\n        this.setState({\r\n            link: e.target.value \r\n        })\r\n    }\r\n    onChangePlayer1(e){\r\n        this.setState({\r\n            player1: e.target.value\r\n        })\r\n    }\r\n    onChangePlayer2(e){\r\n        this.setState({\r\n            player2: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeCharacter1(e){\r\n        this.setState({\r\n            character1: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeCharacter2(e){\r\n        this.setState({\r\n            character2: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeWinner(e){\r\n        this.setState({\r\n            winner: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        var winnerField = ''\r\n\r\n        if(this.state.winner === 'Player 1'){\r\n            winnerField = this.state.player1\r\n        }else if (this.state.winner === 'Player 2'){\r\n            winnerField = this.state.player2;\r\n        }\r\n\r\n        const replay ={\r\n            game: this.state.game,\r\n            link: this.state.link,\r\n            player1: this.state.player1,\r\n            player2: this.state.player2,\r\n            character1: this.state.character1,\r\n            character2 :this.state.character2,\r\n            winner: winnerField\r\n        }\r\n\r\n        console.log(JSON.stringify(replay));\r\n\r\n       axios.post('http://localhost:5000/replays/add', replay).then(res => console.log(res.data));\r\n\r\n\r\n        window.location = '/';\r\n    }\r\n\r\n    render(){\r\n        if(this.state.game === 'Street Fighter V' || this.state.game === 'Tekken 7') {\r\n            return(\r\n                <div>\r\n                <h3>Create New Replay</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\"> \r\n                    <label>Game: </label>\r\n                    <select ref=\"userInput\"\r\n                        required\r\n                        className= \"form-control\"\r\n                        value={this.state.game}\r\n                        onChange={this.onChangeGame}>\r\n                        {\r\n                            this.state.games.map(function(game){\r\n                                return <option\r\n                                key = {game}\r\n                                value={game}>{game}\r\n                                </option>;\r\n                            })\r\n                        }\r\n                        </select>\r\n                  </div>\r\n                  <div className=\"form-group\"> \r\n                    <label>Youtube Link: </label>\r\n                    <input  type=\"url\"\r\n                        pattern=\"https://www.youtube.com/.+\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.link}\r\n                        onChange={this.onChangeLink}\r\n                        />\r\n                  </div>\r\n                  <div className=\"form-group\"> \r\n                    <label>Player 1: </label>\r\n                    <input  type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.player1}\r\n                        onChange={this.onChangePlayer1}\r\n                        />\r\n                  </div>\r\n                  <div className=\"form-group\"> \r\n                    <label>Player 2: </label>\r\n                    <input  type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.player2}\r\n                        onChange={this.onChangePlayer2}\r\n                        />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Character 1: </label>\r\n                    <select ref=\"userInput\"\r\n                        required\r\n                        className= \"form-control\"\r\n                        value={this.state.character1}\r\n                        onChange={this.onChangeCharacter1}>\r\n                        {\r\n                            this.state.characters1.map(function(character1){\r\n                                return <option\r\n                                key = {character1}\r\n                                value={character1}>{character1}\r\n                                </option>;\r\n                            })\r\n                        }\r\n                        </select>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Character 2: </label>\r\n                    <select ref=\"userInput\"\r\n                        required\r\n                        className= \"form-control\"\r\n                        value={this.state.character2}\r\n                        onChange={this.onChangeCharacter2}>\r\n                        {\r\n                            this.state.characters2.map(function(character2){\r\n                                return <option\r\n                                key = {character2}\r\n                                value={character2}>{character2}\r\n                                </option>;\r\n                            })\r\n                        }\r\n                        </select>\r\n                  </div>\r\n    \r\n                <div className=\"form-group\">\r\n                    <label>Winner: </label>\r\n                    <select ref=\"userInput\"\r\n                      required\r\n                      className=\"form-control\"\r\n                      value={this.state.winner}\r\n                      onChange={this.onChangeWinner}>\r\n                        {\r\n                            players.map(function(players){\r\n                                return<option\r\n                                key={players}\r\n                                value={players}>{players}\r\n                                </option>\r\n                            })\r\n                        }\r\n                      </select>\r\n                </div>\r\n          \r\n                  <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Create a new replay\" className=\"btn btn-primary\" />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                <h3>Create New Replay</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\"> \r\n                    <label>Game: </label>\r\n                    <select ref=\"userInput\"\r\n                        required\r\n                        className= \"form-control\"\r\n                        value={this.state.game}\r\n                        onChange={this.onChangeGame}>\r\n                        {\r\n                            this.state.games.map(function(game){\r\n                                return <option\r\n                                key = {game}\r\n                                value={game}>{game}\r\n                                </option>;\r\n                            })\r\n                        }\r\n                        </select>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst streetFighterCharacters =['','Ryu','Ken','Birdie','Cammy','Chun-Li','Dhalsim','F.A.N.G','Karin','Laura','M.Bison/Dictator','Nash','Necalli','R.Mika','Rashid','Vega/Claw','Zangief','Alex','Balrog/Boxer','Guile',\r\n    'Ibuki','Juri','Urien','Abigail','Akuma/Gouki','Ed','Kolin','Menat','Zeku','Blanka','Cody','Falke','G','Sagat','Sakura','E.Honda','Gill','Kage','Lucia','Poison','Seth'];\r\n\r\nconst tekken7Characters = ['','Heihachi','Kazuya','Lee','Law','Nina','Paul','Yoshimitsu','Bryan','Eddy','Hwoarang','Jin','King','Kuma','Xiaoyu','Panda','Steve','Asuka','Devil Jin','Feng',\r\n'Lili','Dragunov','Bob','Leo','Miguel','Lars','Alisa','Claudio','Katarina','Lucky Chloe','Shaheen','Josie','Gigas','Jack-7','Kazumi','Master Raven','Eliza','Anna','Lei','Julia',\r\n'Marduk','Armor King','Zafina','Ganryu','Leroy','Fahkumram','Akuma','Geese','Noctis','Negan']\r\n\r\n\r\n\r\n const Replay = props => (\r\n    <tr>\r\n        <td>{props.exercise.game}</td>\r\n        <td>{props.exercise.player1}</td>\r\n        <td>{props.exercise.character1}</td>\r\n        <td>{props.exercise.player2}</td>\r\n        <td>{props.exercise.character2}</td>\r\n        <td>{props.exercise.winner}</td>\r\n        <td>\r\n            <a href={props.exercise.link} target=\"_blank\" rel=\"noopener noreferrer\">Link</a>\r\n        </td>\r\n    </tr>\r\n  )\r\n\r\nexport default class SearchReplays extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeGame = this.onChangeGame.bind(this);\r\n        this.onChangePlayer1 = this.onChangePlayer1.bind(this);\r\n        this.onChangePlayer2 = this.onChangePlayer2.bind(this);\r\n        this.onChangeCharacter1 = this.onChangeCharacter1.bind(this);\r\n        this.onChangeCharacter2 = this.onChangeCharacter2.bind(this);\r\n        this.onChangeWinner = this.onChangeWinner.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            games: [],\r\n            game:'',\r\n            link: '',\r\n            player1: '',\r\n            player2: '',\r\n            characters1: [],\r\n            characters2: [],\r\n            character1:'',\r\n            character2:'',\r\n            winner: '',\r\n            replaysQuery: '',\r\n            replays: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            games: ['Street Fighter V','Tekken 7'],\r\n           \r\n            characters1: ['','Ryu','Ken','Birdie','Cammy','Chun-Li','Dhalsim','F.A.N.G','Karin','Laura','M.Bison/Dictator','Nash','Necalli','R.Mika','Rashid','Vega/Claw','Zangief','Alex','Balrog/Boxer','Guile',\r\n            'Ibuki','Juri','Urien','Abigail','Akuma/Gouki','Ed','Kolin','Menat','Zeku','Blanka','Cody','Falke','G','Sagat','Sakura','E.Honda','Gill','Kage','Lucia','Poison','Seth'],\r\n           \r\n            characters2: ['','Ken','Ryu','Birdie','Cammy','Chun-Li','Dhalsim','F.A.N.G','Karin','Laura','M.Bison/Dictator','Nash','Necalli','R.Mika','Rashid','Vega/Claw','Zangief','Alex','Balrog/Boxer','Guile',\r\n            'Ibuki','Juri','Urien','Abigail','Akuma/Gouki','Ed','Kolin','Menat','Zeku','Blanka','Cody','Falke','G','Sagat','Sakura','E.Honda','Gill','Kage','Lucia','Poison','Seth'],\r\n\r\n            game: \"Street Fighter V\",\r\n            character1: \"\",\r\n            character2: \"\"\r\n        })\r\n    }\r\n\r\n    onChangeGame(e){\r\n        if(e.target.value === 'Street Fighter V'){\r\n            this.setState({\r\n                characters1: streetFighterCharacters,\r\n                characters2: streetFighterCharacters,\r\n                character1: '',\r\n                character2: ''\r\n            })\r\n            \r\n        }\r\n        if(e.target.value === 'Tekken 7'){\r\n            this.setState({\r\n                characters1: tekken7Characters,\r\n                characters2: tekken7Characters,\r\n                character1: '',\r\n                character2: ''\r\n            })\r\n        }\r\n        this.setState({\r\n            game: e.target.value\r\n        })\r\n       \r\n    }\r\n   \r\n    onChangePlayer1(e){\r\n        this.setState({\r\n            player1: e.target.value \r\n        })\r\n    }\r\n    onChangePlayer2(e){\r\n        this.setState({\r\n            player2: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeCharacter1(e){\r\n        this.setState({\r\n            character1: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onChangeCharacter2(e){\r\n        this.setState({\r\n            character2: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeWinner(e){\r\n        this.setState({\r\n            winner: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const replay = {};\r\n\r\n        this.state.game && (replay.game = this.state.game);\r\n        this.state.player1 && (replay.player1 = this.state.player1);\r\n        this.state.player2 && (replay.player2 = this.state.player2);\r\n        this.state.character1 && (replay.character1 = this.state.character1);\r\n        this.state.character2 && (replay.character2 = this.state.character2);\r\n\r\n        console.log(replay);\r\n        \r\n        axios.get(\"http://localhost:5000/search/\",\r\n            {params:replay}).then(response => {\r\n                this.setState({\r\n                    replays: response.data\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error);\r\n        })\r\n    }\r\n\r\n    replayList() {\r\n        return this.state.replays.map(currentreplay => {\r\n          return <Replay exercise={currentreplay} deleteReplay={this.deleteReplay} key={currentreplay._id}/>;\r\n        })\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <h3>Search Replay</h3>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\"> \r\n                <label>Game: </label>\r\n                <select ref=\"userInput\"\r\n                    required\r\n                    className= \"form-control\"\r\n                    value={this.state.game}\r\n                    onChange={this.onChangeGame}>\r\n                    {\r\n                        this.state.games.map(function(game){\r\n                            return <option\r\n                            key = {game}\r\n                            value={game}>{game}\r\n                            </option>;\r\n                        })\r\n                    }\r\n                    </select>\r\n              </div>\r\n              <div className=\"form-group\"> \r\n                <label>Player 1: </label>\r\n                <input  type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={this.state.player1}\r\n                    onChange={this.onChangePlayer1}\r\n                    />\r\n              </div>\r\n              <div className=\"form-group\"> \r\n                <label>Player 2: </label>\r\n                <input  type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={this.state.player2}\r\n                    onChange={this.onChangePlayer2}\r\n                    />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Character 1: </label>\r\n                <select ref=\"userInput\"\r\n                    className= \"form-control\"\r\n                    value={this.state.character1}\r\n                    onChange={this.onChangeCharacter1}>\r\n                    {\r\n                        this.state.characters1.map(function(character1){\r\n                            return <option\r\n                            key = {character1}\r\n                            value={character1}>{character1}\r\n                            </option>;\r\n                        })\r\n                    }\r\n                    </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Character 2: </label>\r\n                <select ref=\"userInput\"\r\n                    className= \"form-control\"\r\n                    value={this.state.character2}\r\n                    onChange={this.onChangeCharacter2}>\r\n                    {\r\n                        this.state.characters2.map(function(character2){\r\n                            return <option\r\n                            key = {character2}\r\n                            value={character2}>{character2}\r\n                            </option>;\r\n                        })\r\n                    }\r\n                    </select>\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <input type=\"submit\" value=\"Search replay\" className=\"btn btn-primary\" />\r\n              </div>\r\n            </form>\r\n            <div>\r\n          <h3>Results</h3>\r\n              <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n              <tr>\r\n              <th>Game</th>\r\n              <th>Player 1</th>\r\n              <th>Character 1</th>\r\n              <th>Player 2</th>\r\n              <th>Character 2</th>\r\n              <th>Winner</th>\r\n              <th>Link</th>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n              { this.replayList() }\r\n          </tbody>\r\n          </table> \r\n        </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Navbar from \"./components/navbar.component\";\r\nimport ReplaysList from \"./components/replays-list.component\";\r\nimport CreateReplay from \"./components/create-replay.component\";\r\nimport SearchReplay from \"./components/search-replay.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <br/>\r\n        <Route path=\"/\" exact component={ReplaysList} />\r\n        <Route path=\"/create\" exact component={CreateReplay} />\r\n        <Route path=\"/search\" exact component={SearchReplay} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}